name: Build and Release

on:
  push:
    tags:
      - '*'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
    steps:
      - uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21' # Replace with your Go version

      - name: Build
        run: go build -v -o output/go-time .

      - name: Archive production artifacts
        uses: actions/upload-artifact@v4.2.0
        with:
          name: ${{ runner.os }}-artifacts
          path: output/
      
      - name: Zip the artifacts
        run: |
          if ($env:RUNNER_OS -eq 'Windows') {
            Compress-Archive -Path output/go-time -DestinationPath output/go-time.zip
          } else {
            cd output
            zip -r go-time.zip go-time
          }
        shell: pwsh

      - name: Upload zipped artifact
        uses: actions/upload-artifact@v4.2.0
        with:
          name: go-time-zipped-${{ matrix.os }}
          path: output/go-time.zip

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download Windows Artifact
        uses: actions/download-artifact@v4.1.1
        with:
          name: go-time-zipped-windows-latest
          path: output/windows

      - name: Download Ubuntu Artifact
        uses: actions/download-artifact@v4.1.1
        with:
          name: go-time-zipped-ubuntu-latest
          path: output/ubuntu

      - name: Download macOS Artifact
        uses: actions/download-artifact@v4.1.1
        with:
          name: go-time-zipped-macos-latest
          path: output/macos

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: true
      
      - name: List files in output/windows
        run: ls -lR ./output/windows
    
      - name: Upload Windows Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./output/windows/go-time-zipped-windows-latest.zip
          asset_name: go-time-windows-latest.zip
          asset_content_type: application/zip

      - name: Upload Ubuntu Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./output/ubuntu/go-time-zipped-ubuntu-latest.zip
          asset_name: go-time-ubuntu-latest.zip
          asset_content_type: application/zip

      - name: Upload macOS Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./output/macos/go-time-zipped-macos-latest.zip
          asset_name: go-time-macos-latest.zip
          asset_content_type: application/zip

